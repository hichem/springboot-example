apiVersion: v1
kind: Service
metadata:
  name: user
spec:
  type: LoadBalancer
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: user
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
spec:
  selector:
    matchLabels:
      app: user
  replicas: 1
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  template:
    metadata:
      labels:
        app: user
    spec:
      containers:
        - image: acvcontainerregistry.azurecr.io/user:3.8
          imagePullPolicy: Always							# Set to Always to force pulling the image at each deployment
          name: user
          env:
            - name: RABBITMQ_USERNAME
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secrets
                  key: username
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secrets
                  key: password
            - name: POSTGRES_DB
              value: kamereon
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secrets
                  key: password
          ports:
            - containerPort: 80
          # volumeMounts:
          # - name: user-config 
          #   mountPath: "/deployments/config" 
          #   readOnly: true
      imagePullSecrets:
            - name: secret-acr
      # volumes:
      # - name: user-config
      #   configMap:
      #     name: user 
      #     items:
      #     - key: application.properties 
      #       path: application.properties

